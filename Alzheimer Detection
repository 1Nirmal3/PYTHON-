{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Alzheimer Detection","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNiXRWecGybz4Ub9FWCGfwT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"OalrF-EVuiD5"},"outputs":[],"source":["import numpy as np\n","from keras import layers\n","from keras.layers import Input, Dense, Activation,BatchNormalization, Flatten, Conv2D, MaxPooling2D\n","from keras.models import Model\n","from keras.preprocessing import image\n","from keras.preprocessing.image import ImageDataGenerator\n","import keras.backend as K\n","K.set_image_data_format('channels_last')\n","import matplotlib.pyplot as plt\n","from matplotlib.pyplot import imshow\n","import tensorflow as tf"]},{"cell_type":"code","source":["path='https://www.kaggle.com/datasets/madhucharan/alzheimersdisease5classdatasetadni'\n","train_datagen = ImageDataGenerator(rescale=1. / 255)\n","train = train_datagen.flow_from_directory(path, target_size=(227,227), class_mode='categorical')"],"metadata":{"id":"HiDWoKXYvvT-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def AlexNet(input_shape):\n","    \n","    X_input = Input(input_shape)\n","    \n","    X = Conv2D(96,(11,11),strides = 4,name=\"conv0\")(X_input)\n","    X = BatchNormalization(axis = 3 , name = \"bn0\")(X)\n","    X = Activation('relu')(X)\n","    \n","    X = MaxPooling2D((3,3),strides = 2,name = 'max0')(X)\n","    \n","    X = Conv2D(256,(5,5),padding = 'same' , name = 'conv1')(X)\n","    X = BatchNormalization(axis = 3 ,name='bn1')(X)\n","    X = Activation('relu')(X)\n","    \n","    X = MaxPooling2D((3,3),strides = 2,name = 'max1')(X)\n","    \n","    X = Conv2D(384, (3,3) , padding = 'same' , name='conv2')(X)\n","    X = BatchNormalization(axis = 3, name = 'bn2')(X)\n","    X = Activation('relu')(X)\n","    \n","    X = Conv2D(384, (3,3) , padding = 'same' , name='conv3')(X)\n","    X = BatchNormalization(axis = 3, name = 'bn3')(X)\n","    X = Activation('relu')(X)\n","    \n","    X = Conv2D(256, (3,3) , padding = 'same' , name='conv4')(X)\n","    X = BatchNormalization(axis = 3, name = 'bn4')(X)\n","    X = Activation('relu')(X)\n","    \n","    X = MaxPooling2D((3,3),strides = 2,name = 'max2')(X)\n","    \n","    X = Flatten()(X)\n","    \n","    X = Dense(4096, activation = 'relu', name = \"fc0\")(X)\n","    \n","    X = Dense(4096, activation = 'relu', name = 'fc1')(X) \n","    \n","    X = Dense(6,activation='softmax',name = 'fc2')(X)\n","    \n","    model = Model(inputs = X_input, outputs = X, name='AlexNet')\n","\n","    return model"],"metadata":{"id":"CNzVCiSmv2E-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["alex = AlexNet(train[0][0].shape[1:])"],"metadata":{"id":"QsXIwbwwv4i1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["alex.compile(optimizer = 'adam' , loss = 'categorical_crossentropy' , metrics=['accuracy'])"],"metadata":{"id":"beLGHOMNv6sO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["alex.fit(train,epochs=50)"],"metadata":{"id":"vd-GAE3Ev8ak"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from keras.models import Sequential\n","from keras.layers.core import Flatten, Dense, Dropout\n","from keras.layers.convolutional import Convolution2D, MaxPooling2D, ZeroPadding2D\n","#from keras.optimizers import SGD\n","import cv2, numpy as np"],"metadata":{"id":"DNGO0znJwAzL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def VGG_16(weights_path=None):\n","    model = tf.keras.Sequential()\n","    model.add(ZeroPadding2D((1,1),input_shape=(3,224,224)))\n","    model.add(Convolution2D(64, 3, 3, activation='relu'))\n","    model.add(ZeroPadding2D((1,1)))\n","    model.add(Convolution2D(64, 3, 3, activation='relu'))\n","    model.add(MaxPooling2D((2,2), strides=(2,2)))\n","\n","    model.add(ZeroPadding2D((1,1)))\n","    model.add(Convolution2D(128, 3, 3, activation='relu'))\n","    model.add(ZeroPadding2D((1,1)))\n","    model.add(Convolution2D(128, 3, 3, activation='relu'))\n","    model.add(MaxPooling2D((2,2), strides=(2,2)))\n","\n","    model.add(ZeroPadding2D((1,1)))\n","    model.add(Convolution2D(256, 3, 3, activation='relu'))\n","    model.add(ZeroPadding2D((1,1)))\n","    model.add(Convolution2D(256, 3, 3, activation='relu'))\n","    model.add(ZeroPadding2D((1,1)))\n","    model.add(Convolution2D(256, 3, 3, activation='relu'))\n","    model.add(MaxPooling2D((2,2), strides=(2,2)))\n","\n","    model.add(ZeroPadding2D((1,1)))\n","    model.add(Convolution2D(512, 3, 3, activation='relu'))\n","    model.add(ZeroPadding2D((1,1)))\n","    model.add(Convolution2D(512, 3, 3, activation='relu'))\n","    model.add(ZeroPadding2D((1,1)))\n","    model.add(Convolution2D(512, 3, 3, activation='relu'))\n","    model.add(MaxPooling2D((2,2), strides=(2,2)))\n","\n","    model.add(ZeroPadding2D((1,1)))\n","    model.add(Convolution2D(512, 3, 3, activation='relu'))\n","    model.add(ZeroPadding2D((1,1)))\n","    model.add(Convolution2D(512, 3, 3, activation='relu'))\n","    model.add(ZeroPadding2D((1,1)))\n","    model.add(Convolution2D(512, 3, 3, activation='relu'))\n","    model.add(MaxPooling2D((2,2), strides=(2,2)))\n","\n","    model.add(Flatten())\n","    model.add(Dense(4096, activation='relu'))\n","    model.add(Dropout(0.5))\n","    model.add(Dense(4096, activation='relu'))\n","    model.add(Dropout(0.5))\n","    model.add(Dense(1000, activation='softmax'))\n","\n","    if weights_path:\n","        model.load_weights(weights_path)\n","\n","    return model\n"],"metadata":{"id":"mbMY5bgLwBQV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["vgg=VGG_16()"],"metadata":{"id":"HYvGZ15BwFDn"},"execution_count":null,"outputs":[]}]}